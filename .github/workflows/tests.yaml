name: tests

on:
  push:
  pull_request:

jobs:
  test:
    name: Django ${{ matrix.django }} / Python ${{ matrix.python }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.10", "3.11", "3.12", "3.13"]
        django: ["4.2.*", "5.0.*", "5.1.*", "5.2.*"]
        exclude:
          # Django 4.2 doesn't support Python 3.13
          - python: "3.13"
            django: "4.2.*"
          # Django 5.0 doesn't support Python 3.13
          - python: "3.13"
            django: "5.0.*"

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt
          pip install --upgrade "Django==${{ matrix.django }}"
          pip install coverage
          # If you want to install the project itself (when it has setup.py/pyproject.toml):
          if [ -f setup.py ] || [ -f pyproject.toml ]; then
            pip install -e .
          fi

      - name: Run tests with coverage
        working-directory: tests
        env:
          VCR_RECORD_MODE: none
        run: |
          # Use --parallel so each matrix job writes its own .coverage.* file
          coverage run --parallel manage.py test

      - name: Upload coverage data (per-matrix)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python }}-${{ matrix.django }}
          path: |
            tests/.coverage.*
          if-no-files-found: error

  coverage:
    name: Merge & Report Coverage
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code (for source paths)
        uses: actions/checkout@v4

      - name: Download all coverage artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "pip"

      - name: Install coverage
        run: pip install coverage

      - name: Combine coverage and generate reports
        run: |
          # Combine all .coverage.* files from matrix runs
          coverage combine
          # Text summary in logs and job summary
          coverage report -m | tee -a "$GITHUB_STEP_SUMMARY"
          # XML for Codecov / other tools
          coverage xml -o coverage.xml
          # Optional HTML (uploaded as artifact)
          coverage html

      - name: Upload coverage.xml and HTML report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            coverage.xml
            htmlcov/

      # Optional: upload to Codecov if token is present
      - name: Upload to Codecov
        if: ${{ secrets.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          flags: unittests
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
